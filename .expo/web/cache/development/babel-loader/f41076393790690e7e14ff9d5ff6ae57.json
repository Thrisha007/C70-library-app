{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\draja\\\\Desktop\\\\Coding - Thrisha\\\\BarCodeScanner\\\\screens\\\\BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                scanned: true,\n                scannedData: data,\n                buttonState: 'normal'\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState === \"clicked\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          }\n        }, \"Wili\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book ID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions('BookId');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student ID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          }\n        }, \"Scan\"))));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: 'cyan',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/draja/Desktop/Coding - Thrisha/BarCodeScanner/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","scannedData","state","scannedBookId","scannedStudentId","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","scanButton","buttonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        hasCameraPermissions: null,\r\n        scanned: false,\r\n        scannedBookId: '',\r\n        scannedStudentId: '',\r\n        buttonState: 'normal'\r\n      }\r\n    }\r\n\r\n    getCameraPermissions = async (id) =>{\r\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n      \r\n      this.setState({\r\n        /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n        hasCameraPermissions: status === \"granted\",\r\n        buttonState: id,\r\n        scanned: false\r\n      });\r\n    }\r\n\r\n    handleBarCodeScanned = async({type, data})=>{\r\n      this.setState({\r\n        scanned: true,\r\n        scannedData: data,\r\n        buttonState: 'normal'\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const hasCameraPermissions = this.state.hasCameraPermissions;\r\n      const scanned = this.state.scanned;\r\n      const buttonState = this.state.buttonState;\r\n\r\n      if (buttonState === \"clicked\" && hasCameraPermissions){\r\n        return(\r\n          <BarCodeScanner\r\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n            style={StyleSheet.absoluteFillObject}\r\n          />\r\n        );\r\n      }\r\n\r\n      else if (buttonState === \"normal\"){\r\n        return(\r\n          <View style={styles.container}>\r\n\r\n            <View>\r\n              <Image\r\n              source = {require(\"../assets/booklogo.jpg\")}\r\n              style = {{width: 200, height: 200}}/>\r\n              <Text style = {{textAlign: 'center', fontSize: 30}}>Wili</Text>\r\n            </View>\r\n\r\n              <View style = {styles.inputView}>\r\n                <TextInput\r\n                style = {styles.inputBox}\r\n                placeholder = \"Book ID\"/>\r\n                <TouchableOpacity style = {styles.scanButton}\r\n                onPress = {()=>{\r\n                  this.getCameraPermissions('BookId')\r\n                }}>\r\n                  <Text style = {styles.buttonText}>Scan</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View style = {styles.inputView}>\r\n                <TextInput\r\n                style = {styles.inputBox}\r\n                placeholder = \"Student ID\"/>\r\n                <TouchableOpacity style = {styles.scanButton}>\r\n                  <Text style = {styles.buttonText}>Scan</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n          \r\n        </View>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    displayText:{\r\n      fontSize: 15,\r\n      textDecorationLine: 'underline'\r\n    },\r\n    scanButton:{\r\n      backgroundColor: '#2196F3',\r\n      padding: 10,\r\n      margin: 10\r\n    },\r\n    buttonText:{\r\n      fontSize: 15,\r\n      textAlign: 'center',\r\n      marginTop: 10\r\n    },\r\n    inputView:{\r\n      flexDirection: 'row',\r\n      margin: 20\r\n    },\r\n    inputBox:{\r\n      width:200,\r\n      height: 40,\r\n      borderWidth: 1.5,\r\n      borderRightWidth: 0,\r\n      fontSize: 20\r\n    },\r\n    scanButton:{\r\n      backgroundColor: 'cyan',\r\n      width: 50,\r\n      borderWidth: 1.5,\r\n      borderLeftWidth: 0\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}
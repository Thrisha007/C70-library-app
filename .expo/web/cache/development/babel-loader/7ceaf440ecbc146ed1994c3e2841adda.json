{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\draja\\\\Desktop\\\\Coding - Thrisha\\\\BarCodeScanner\\\\screens\\\\BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: 'clicked',\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                scanned: true,\n                scannedData: data,\n                buttonState: 'normal'\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState === \"clicked\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book ID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          }\n        }, \"Scan\"))), React.createElement(Text, {\n          style: styles.displayText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          }\n        }, hasCameraPermissions === true ? this.state.scannedData : \"Request Camera Permission\"), React.createElement(TouchableOpacity, {\n          onPress: this.getCameraPermissions,\n          style: styles.scanButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          }\n        }, \"Scan QR Code\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/draja/Desktop/Coding - Thrisha/BarCodeScanner/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","TransactionScreen","getCameraPermissions","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","scannedData","state","undefined","StyleSheet","absoluteFillObject","styles","container","inputBox","scanButton","displayText","buttonText","Component","create","flex","justifyContent","alignItems","fontSize","textDecorationLine","backgroundColor","padding","margin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;IAEqBC,iB;;;AACjB,+BAAa;AAAA;;AAAA;;AACX;;AADW,UAUbC,oBAVa,GAUU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEH,WAAW,CAACI,QAAZ,CAAqBJ,WAAW,CAACK,MAAjC,CADF;;AAAA;AAAA;AACdC,cAAAA,MADc,yBACdA,MADc;;AAGrB,oBAAKC,QAAL,CAAc;AAIZC,gBAAAA,oBAAoB,EAAEF,MAAM,KAAK,SAJrB;AAKZG,gBAAAA,WAAW,EAAE,SALD;AAMZC,gBAAAA,OAAO,EAAE;AANG,eAAd;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVV;;AAAA,UAuBbC,oBAvBa,GAuBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,IAAP,QAAOA,IAAP,EAAaC,IAAb,QAAaA,IAAb;;AACrB,oBAAKN,QAAL,CAAc;AACZG,gBAAAA,OAAO,EAAE,IADG;AAEZI,gBAAAA,WAAW,EAAED,IAFD;AAGZJ,gBAAAA,WAAW,EAAE;AAHD,eAAd;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBV;;AAEX,UAAKM,KAAL,GAAa;AACXP,MAAAA,oBAAoB,EAAE,IADX;AAEXE,MAAAA,OAAO,EAAE,KAFE;AAGXI,MAAAA,WAAW,EAAE,EAHF;AAIXL,MAAAA,WAAW,EAAE;AAJF,KAAb;AAFW;AAQZ;;;;6BAuBQ;AACP,UAAMD,oBAAoB,GAAG,KAAKO,KAAL,CAAWP,oBAAxC;AACA,UAAME,OAAO,GAAG,KAAKK,KAAL,CAAWL,OAA3B;AACA,UAAMD,WAAW,GAAG,KAAKM,KAAL,CAAWN,WAA/B;;AAEA,UAAIA,WAAW,KAAK,SAAhB,IAA6BD,oBAAjC,EAAsD;AACpD,eACE,oBAAC,cAAD;AACE,UAAA,gBAAgB,EAAEE,OAAO,GAAGM,SAAH,GAAe,KAAKL,oBAD/C;AAEE,UAAA,KAAK,EAAEM,UAAU,CAACC,kBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OAPD,MASK,IAAIT,WAAW,KAAK,QAApB,EAA6B;AAChC,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AACA,UAAA,KAAK,EAAID,MAAM,CAACE,QADhB;AAEA,UAAA,WAAW,EAAG,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIE,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAIF,MAAM,CAACG,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJF,CADJ,EASA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA,WACEf,oBAAoB,KAAG,IAAvB,GAA8B,KAAKO,KAAL,CAAWD,WAAzC,GAAsD,2BADxD,CATA,EAaA,oBAAC,gBAAD;AACE,UAAA,OAAO,EAAE,KAAKX,oBADhB;AAEE,UAAA,KAAK,EAAEgB,MAAM,CAACG,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CAbA,CADF;AAqBD;AACF;;;;EArE0CzB,KAAK,CAAC0B,S;;SAAhCvB,iB;AAwEnB,IAAMiB,MAAM,GAAGF,UAAU,CAACS,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BN,EAAAA,WAAW,EAAC;AACVO,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,kBAAkB,EAAE;AAFV,GANmB;AAU/BT,EAAAA,UAAU,EAAC;AACTU,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,MAAM,EAAE;AAHC,GAVoB;AAe/BV,EAAAA,UAAU,EAAC;AACTM,IAAAA,QAAQ,EAAE;AADD;AAfoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        hasCameraPermissions: null,\r\n        scanned: false,\r\n        scannedData: '',\r\n        buttonState: 'normal'\r\n      }\r\n    }\r\n\r\n    getCameraPermissions = async () =>{\r\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n      \r\n      this.setState({\r\n        /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n        hasCameraPermissions: status === \"granted\",\r\n        buttonState: 'clicked',\r\n        scanned: false\r\n      });\r\n    }\r\n\r\n    handleBarCodeScanned = async({type, data})=>{\r\n      this.setState({\r\n        scanned: true,\r\n        scannedData: data,\r\n        buttonState: 'normal'\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const hasCameraPermissions = this.state.hasCameraPermissions;\r\n      const scanned = this.state.scanned;\r\n      const buttonState = this.state.buttonState;\r\n\r\n      if (buttonState === \"clicked\" && hasCameraPermissions){\r\n        return(\r\n          <BarCodeScanner\r\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n            style={StyleSheet.absoluteFillObject}\r\n          />\r\n        );\r\n      }\r\n\r\n      else if (buttonState === \"normal\"){\r\n        return(\r\n          <View style={styles.container}>\r\n              <View>\r\n                <TextInput\r\n                style = {styles.inputBox}\r\n                placeholder = \"Book ID\"/>\r\n                <TouchableOpacity style = {styles.scanButton}>\r\n                  <Text>Scan</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n          <Text style={styles.displayText}>{\r\n            hasCameraPermissions===true ? this.state.scannedData: \"Request Camera Permission\"\r\n          }</Text>     \r\n\r\n          <TouchableOpacity\r\n            onPress={this.getCameraPermissions}\r\n            style={styles.scanButton}>\r\n            <Text style={styles.buttonText}>Scan QR Code</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    displayText:{\r\n      fontSize: 15,\r\n      textDecorationLine: 'underline'\r\n    },\r\n    scanButton:{\r\n      backgroundColor: '#2196F3',\r\n      padding: 10,\r\n      margin: 10\r\n    },\r\n    buttonText:{\r\n      fontSize: 20,\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}